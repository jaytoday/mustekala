version: '2'
networks:
  default:
    external:
      name: mustekala

services:
  # Frontend
  nginx-proxy:
    build: ./nginx-proxy/.
    container_name: nginx-proxy
    restart: always
    ports:
      # 80 should be open to the internet for letsencrypt purposes
      - "80:80"
      # 443 should be open to the internet for wss
      - "443:443"
    volumes:
      - /home/core/ssl-certs:/etc/nginx/certs:ro
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    environment:
      DEFAULT_HOST: "musteka.la"

  ## Takes care of the SSL certs
  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx-proxy-companion
    restart: always
    volumes_from:
      - nginx-proxy
    volumes:
      - /home/core/ssl-certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro

  ## The actual application that interests us
  kitsunet-bridge:
    image: dryajov/kitsunet-bridge
    restart: always
    expose:
      # This port is the one that nginx-proxy container will use to redirect calls
      # Has to be represented in the environment variable VIRTUAL_PORT below
      - "30334"
    ports:
      - "30334:30334"
    external_links:
      - mustekala-geth
    ulimits:
      nofile:
        soft: 20000
        hard: 40000
    environment:
      ENV_ID: "${ENV_ID}"
      VIRTUAL_HOST: "${ENV_ID}.lab.metamask.io"
      VIRTUAL_PORT: "30334"
      LETSENCRYPT_HOST: "${ENV_ID}.lab.metamask.io"
      LETSENCRYPT_EMAIL: "herman.junge@consensys.net"
